{"block":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":true,"state":"'async';\nconst { default: Markdown } = await import('https://esm.sh/react-markdown');\nconst readme = await (await fetch('https://raw.githubusercontent.com/keenbug/tables/main/README.md')).text();\n\n<Markdown className=\"simplecss\">{readme}</Markdown>"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]},"history":[{"time":1698772574508,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":0,"name":"","isCollapsed":false,"state":""}]}},{"time":1698772694588,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":0,"name":"","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div>\n      <button onClick={() => setCount(c => c+1)}>\n        {count}\n      </button>\n      <button onClick={() => setCount(0)}>\n        reset\n      </button>\n    </div>\n  )\n  }"}]}},{"time":1698772827388,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2\">\n      <div>{label}</div>\n      <button \n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"rounded \"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"clicks\" />"}]}},{"time":1698772909186,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2\">\n      <div>{label}</div>\n      <button \n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"rounded bg-amber-500 px-2\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"clicks\" />"}]}},{"time":1698772967816,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2\">\n      <div>{label}</div>\n      <button \n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"rounded bg-amber-500 text-amber-100 px-2\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"clicks\" />"}]}},{"time":1698773028050,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"clicks\" />"}]}},{"time":1698773153586,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"}]}},{"time":1698773209514,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699994621551,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":true,"state":"<>test</>"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699995527568,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":false,"state":"<>test</>"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699995588373,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":true,"state":"<>test</>"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699995612412,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":false,"state":"'async';\n"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699995629993,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":false,"state":"'async';\nconst { default: Markdown } = import('https://esm.sh/react-markdown')"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699995665912,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":false,"state":"'async';\nconst { default: Markdown } = await import('https://esm.sh/react-markdown')\nconst readme = await (await fetch('https://raw.githubusercontent.com/keenbug/tables/main/README.md')).text()\n\n;<Markdown"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699995683816,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":true,"state":"'async';\nconst { default: Markdown } = await import('https://esm.sh/react-markdown')\nconst readme = await (await fetch('https://raw.githubusercontent.com/keenbug/tables/main/README.md')).text()\n\n;<Markdown className=\"simplecss\">{readme}</Markdown>"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699995934196,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":true,"state":"'async';\nconst { default: Markdown } = await import('https://esm.sh/react-markdown')\nconst readme = await (await fetch('https://raw.githubusercontent.com/keenbug/tables/main/README.md')).text()\n\n;<Markdown className=\"simplecss\">{readme}</Markdown>"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699997169472,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":false,"state":"'async';\nconst { default: Markdown } = await import('https://esm.sh/react-markdown')\nconst readme = await (await fetch('https://raw.githubusercontent.com/keenbug/tables/main/README.md')).text()\n\n;<Markdown className=\"simplecss\">{readme}</Markdown>"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699997203537,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":false,"state":"'async';\nconst { default: Markdown } = await import('https://esm.sh/react-markdown');\nconst readme = await (await fetch('https://raw.githubusercontent.com/keenbug/tables/main/README.md')).text();\n\n<Markdown className=\"simplecss\">{readme}</Markdown>"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699997212179,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":true,"state":"'async';\nconst { default: Markdown } = await import('https://esm.sh/react-markdown');\nconst readme = await (await fetch('https://raw.githubusercontent.com/keenbug/tables/main/README.md')).text();\n\n<Markdown className=\"simplecss\">{readme}</Markdown>"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}},{"time":1699997222003,"state":{"mode":"run","expr":"SheetOf(JSExpr)","inner":[{"id":3,"name":"","isCollapsed":true,"state":"'async';\nconst { default: Markdown } = await import('https://esm.sh/react-markdown');\nconst readme = await (await fetch('https://raw.githubusercontent.com/keenbug/tables/main/README.md')).text();\n\n<Markdown className=\"simplecss\">{readme}</Markdown>"},{"id":0,"name":"Counter","isCollapsed":false,"state":"function Counter({ label }) {\n  const [count, setCount] = React.useState(0)\n  \n  return (\n    <div className=\"flex flex-row space-x-2 p-2 rounded border\">\n      <div className=\"text-amber-900\">{label}</div>\n      <button\n        className=\"rounded bg-amber-600 text-amber-50 px-2\"\n        onClick={() => setCount(c => c+1)}\n        >\n        {count}\n      </button>\n      <button\n        className=\"text-amber-800\"\n        onClick={() => setCount(0)}\n        >\n        reset\n      </button>\n      \n    </div>\n  )\n}"},{"id":1,"name":"","isCollapsed":false,"state":"<Counter label=\"Clicks:\" />"},{"id":2,"name":"","isCollapsed":false,"state":"<div className=\"space-y-1\">\n  {$1}\n  {$1}\n  {$1}\n</div>"}]}}],"name":""}